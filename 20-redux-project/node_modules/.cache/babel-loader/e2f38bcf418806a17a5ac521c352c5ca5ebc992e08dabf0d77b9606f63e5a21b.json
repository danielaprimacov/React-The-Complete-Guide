{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\n// preparing a slice of our global state\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  // all the reducers which the state needs\n  reducers: {\n    increment(state) {\n      // mutation is alowed, ReduxToolkit create a clone of the state\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    // never mutate (change) the state --> state.counter++\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","counterReducer","type","store"],"sources":["D:/Job/Courses/React M.Schwarzmuller/20-redux-project/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\n// preparing a slice of our global state\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  // all the reducers which the state needs\r\n  reducers: {\r\n    increment(state) {\r\n      // mutation is alowed, ReduxToolkit create a clone of the state\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.amount;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === \"increment\") {\r\n    // never mutate (change) the state --> state.counter++\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"toggle\") {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;;AAEtD;AACA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZ;EACAK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACf;MACAA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;IAC/C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMW,cAAc,GAAGA,CAACN,KAAK,GAAGP,YAAY,EAAEU,MAAM,KAAK;EACvD,IAAIA,MAAM,CAACI,IAAI,KAAK,WAAW,EAAE;IAC/B;IACA,OAAO;MACLb,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EAEA,IAAIQ,MAAM,CAACI,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACLb,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;MACtCT,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EAEA,IAAIQ,MAAM,CAACI,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLb,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EAEA,IAAIQ,MAAM,CAACI,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACLb,OAAO,EAAEM,KAAK,CAACN,OAAO;MACtBC,WAAW,EAAE,CAACK,KAAK,CAACL;IACtB,CAAC;EACH;EAEA,OAAOK,KAAK;AACd,CAAC;AAED,MAAMQ,KAAK,GAAGjB,WAAW,CAACe,cAAc,CAAC;AAEzC,eAAeE,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}