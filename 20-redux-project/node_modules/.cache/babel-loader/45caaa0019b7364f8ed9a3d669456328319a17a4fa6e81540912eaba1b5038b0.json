{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\n\n// preparing a slice of our global state\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialCounterState,\n  // all the reducers which the state needs\n  reducers: {\n    increment(state) {\n      // mutation is alowed, ReduxToolkit create a clone of the state\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// action creators\n// counterSlice.actions.toggleCounter\n\n// manage merging multiple Reducers into one big Reducer\nconst store = configureStore({\n  reducer: counterSlice.reducer /*{ counter: counterSlice.reducer }, // a map of reducers */\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"sources":["D:/Job/Courses/React M.Schwarzmuller/20-redux-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\n\r\n// preparing a slice of our global state\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialCounterState,\r\n  // all the reducers which the state needs\r\n  reducers: {\r\n    increment(state) {\r\n      // mutation is alowed, ReduxToolkit create a clone of the state\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\n// action creators\r\n// counterSlice.actions.toggleCounter\r\n\r\n// manage merging multiple Reducers into one big Reducer\r\nconst store = configureStore({\r\n  reducer:\r\n    counterSlice.reducer /*{ counter: counterSlice.reducer }, // a map of reducers */,\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;;AAE7D;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,mBAAmB;EACnB;EACAK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACf;MACAA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA;;AAEA;AACA,MAAMW,KAAK,GAAGd,cAAc,CAAC;EAC3Be,OAAO,EACLX,YAAY,CAACW,OAAO,CAAC;AACzB,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAAO;AAClD,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}