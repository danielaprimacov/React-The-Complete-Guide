{"ast":null,"code":"var _jsxFileName = \"D:\\\\Job\\\\Courses\\\\React M.Schwarzmuller\\\\22-project-multipage-spa\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch details for selected event\"\n    }), {\n      stauts: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    //return { isError: true, message: \"Could not fetch events!\" };\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events.\"\n    }), {\n      status: 500\n    });\n  } else {\n    /*const res = new Response(\"any data\", { status: 201 }); // response constructor\r\n    return res;*/\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return {\n    events: loadEvents()\n  };\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not delete event.\"\n    }), {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["redirect","useRouteLoaderData","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","EventList","_c","loadEvent","id","response","fetch","ok","Response","JSON","stringify","message","stauts","resData","json","events","loadEvents","status","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["D:/Job/Courses/React M.Schwarzmuller/22-project-multipage-spa/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { redirect, useRouteLoaderData } from \"react-router-dom\";\r\n\r\nimport EventItem from \"../components/EventItem\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventDetailPage() {\r\n  const data = useRouteLoaderData(\"event-detail\");\r\n\r\n  return (\r\n    <>\r\n      <EventItem event={data.event} />\r\n      <EventList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nasync function loadEvent(id) {\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!response.ok) {\r\n    throw new Response(\r\n      JSON.stringify({ message: \"Could not fetch details for selected event\" }),\r\n      { stauts: 500 }\r\n    );\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n}\r\n\r\nasync function loadEvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    //return { isError: true, message: \"Could not fetch events!\" };\r\n    throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\r\n      status: 500,\r\n    });\r\n  } else {\r\n    /*const res = new Response(\"any data\", { status: 201 }); // response constructor\r\n    return res;*/\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n}\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n\r\n  return {\r\n    events: loadEvents(),\r\n  };\r\n}\r\n\r\nexport async function action({ params, request }) {\r\n  const eventId = params.eventId;\r\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\r\n    method: request.method,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Response(JSON.stringify({ message: \"Could not delete event.\" }), {\r\n      status: 500,\r\n    });\r\n  }\r\n  return redirect(\"/events\");\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,kBAAkB,QAAQ,kBAAkB;AAE/D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGT,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBACEI,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACH,SAAS;MAACU,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCX,OAAA,CAACY,SAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACb,CAAC;AAEP;AAACP,EAAA,CATQD,eAAe;EAAA,QACTP,kBAAkB;AAAA;AAAAiB,EAAA,GADxBV,eAAe;AAWxB,eAAeA,eAAe;AAE9B,eAAeW,SAASA,CAACC,EAAE,EAAE;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAElE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAChBC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA6C,CAAC,CAAC,EACzE;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACE,MAAM;EACvB;AACF;AAEA,eAAeC,UAAUA,CAAA,EAAG;EAC1B,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA0B,CAAC,CAAC,EAAE;MACzEM,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL;AACJ;IACI,MAAMJ,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACE,MAAM;EACvB;AACF;AAEA,OAAO,eAAeG,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMhB,EAAE,GAAGgB,MAAM,CAACC,OAAO;EAEzB,OAAO;IACLN,MAAM,EAAEC,UAAU,CAAC;EACrB,CAAC;AACH;AAEA,OAAO,eAAeM,MAAMA,CAAC;EAAEF,MAAM;EAAED;AAAQ,CAAC,EAAE;EAChD,MAAME,OAAO,GAAGD,MAAM,CAACC,OAAO;EAC9B,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGe,OAAO,EAAE;IACtEE,MAAM,EAAEJ,OAAO,CAACI;EAClB,CAAC,CAAC;EAEF,IAAI,CAAClB,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA0B,CAAC,CAAC,EAAE;MACzEM,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;EACA,OAAOjC,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC,IAAAkB,EAAA;AAAAsB,YAAA,CAAAtB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}